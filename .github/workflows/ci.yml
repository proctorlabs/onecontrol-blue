name: CI

on:
  push:
    branches:
      - main
    tags:
      - "v*.*.*"

jobs:
  build_and_release:
    name: "Build & Release"
    # if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - target: x86_64-unknown-linux-gnu
            file-tag: "x86_64"
            strip: "x86_64-linux-gnu-strip"
          # - target: i686-unknown-linux-gnu
          #   file-tag: "i686"
          #   strip: "i686-linux-gnu-strip"
          # - target: aarch64-unknown-linux-gnu
          #   file-tag: "aarch64"
          #   strip: "aarch64-linux-gnu-strip"
          # - target: armv7-unknown-linux-gnueabihf
          #   file-tag: "armv7l"
          #   strip: "arm-linux-gnueabihf-strip"
          # - target: arm-unknown-linux-gnueabihf
          #   file-tag: "armv6"
          #   strip: "arm-linux-gnueabihf-strip"
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Install rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true
          target: ${{ matrix.target }}

      - name: Install build dependencies
        run: >-
             sudo apt-get install -y libdbus-1-dev pkg-config

      - name: Build target
        uses: actions-rs/cargo@v1
        with:
          use-cross: true
          command: build
          args: --release --target ${{ matrix.target }}

      - name: Strip binary
        run: >-
          docker run -v $PWD/:/work rustembedded/cross:${{ matrix.target }} ${{ matrix.strip }} /work/target/${{ matrix.target }}/release/rvlink-bridge

      - name: Package tarball
        run: >-
          tar -cJf --lzip 'rvlink-bridge.${{ matrix.file-tag }}.tar.lz' -C target/${{ matrix.target }}/release rvlink-bridge
          ls -al

      # - name: Upload Release Assets
      #   id: upload-release-asset
      #   uses: actions/upload-release-asset@v1
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   with:
      #     upload_url: ${{ needs.create_release.outputs.upload_url }}
      #     asset_path: ./rvlink-bridge.${{ matrix.file-tag }}.tar.xz
      #     asset_name: rvlink-bridge.${{ matrix.file-tag }}.tar.xz
      #     asset_content_type: application/x-gtar