name: CI

on:
  push:
    branches:
      - main
    tags:
      - "v*.*.*"

jobs:
  # build_and_release:
  #   name: "Build & Release"
  #   runs-on: ubuntu-latest
  #   strategy:
  #     matrix:
  #       include:
  #         - target: x86_64-unknown-linux-gnu
  #           file-tag: "x86_64"
  #           strip: "x86_64-linux-gnu-strip"
  #         - target: i686-unknown-linux-gnu
  #           file-tag: "i686"
  #           strip: "i686-linux-gnu-strip"
  #         - target: aarch64-unknown-linux-gnu
  #           file-tag: "aarch64"
  #           strip: "aarch64-linux-gnu-strip"
  #         - target: armv7-unknown-linux-gnueabihf
  #           file-tag: "armv7l"
  #           strip: "arm-linux-gnueabihf-strip"

  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v2

  #     - name: Install rust
  #       uses: actions-rs/toolchain@v1
  #       with:
  #         toolchain: stable
  #         profile: minimal
  #         override: true
  #         target: ${{ matrix.target }}

  #     - name: Build target
  #       uses: actions-rs/cargo@v1
  #       with:
  #         use-cross: true
  #         command: build
  #         args: --release --target ${{ matrix.target }}

  #     - name: Package tarball
  #       run: >-
  #         tar -cJf 'rvlink-bridge.${{ matrix.file-tag }}.tar.xz' -C target/${{ matrix.target }}/release rvlink-bridge

  #     - name: Create release with assets
  #       uses: softprops/action-gh-release@v1
  #       if: startsWith(github.ref, 'refs/tags/')
  #       with:
  #         files: ./rvlink-bridge.*.tar.xz
  docker_images:
    name: Create docker images
    runs-on: ubuntu-20.04
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to GitHub Container registry
        uses: docker/login-action@v1
        env:
          GITHUB_USER: ${{ github.actor }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          registry: ghcr.io
          username: $GITHUB_USER
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Run Crossbuild
        run: |-
          docker buildx build \
            --platform linux/amd64,linux/arm64 \
            -f Dockerfile \
            -t "ghcr.io/proctorlabs/rvling-bridge:${GITHUB_REF##*/}" \
            --push .
